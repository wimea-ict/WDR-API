<?php

namespace  App;

use Illuminate\Database\Eloquent\Model;
use Illuminate\Support\Facades\DB;

class Observationslip extends Model
{
    
    /**
     * The table associated with the model
     * 
     * @var string
     */
    protected $connection = 'mysql2';
    protected $table = 'observationslip';
  
   

    /**
     * Indicates if the model should be timestamped
     * 
     * @var bool
     */
    public $timestamps = false;

    const CREATED_AT = 'creation_date';

    public static function observationsForspecificStationAndDate($date,$station){
        //$observations= DB::connection('mysql2')->select("SELECT * FROM observationslip, stations where stations.station_id=observationslip.Station AND stations.StationName='kampala'AND DATE_FORMAT(observationslip.creation_date, '%Y-%m-%d')='$date' ");
        $observations= DB::connection('mysql2')->select("SELECT DATE(observationslip.CreationDate) AS Date,observationslip.TIME,TotalAmountOfAllClouds, TotalAmountOfLowClouds, TypeOfLowClouds1, OktasOfLowClouds1, HeightOfLowClouds1, CLCODEOfLowClouds1, TypeOfLowClouds2, OktasOfLowClouds2, HeightOfLowClouds2, CLCODEOfLowClouds2 , TypeOfLowClouds3 , OktasOfLowClouds3 ,  HeightOfLowClouds3 , CLCODEOfLowClouds3, TypeOfMediumClouds1,  OktasOfMediumClouds1, HeightOfMediumClouds1 ,  CLCODEOfMediumClouds1, TypeOfMediumClouds2 ,OktasOfMediumClouds2 ,HeightOfMediumClouds2 , CLCODEOfMediumClouds2 , TypeOfMediumClouds3 , OktasOfMediumClouds3 , HeightOfMediumClouds3 , CLCODEOfMediumClouds3 , TypeOfHighClouds1 ,OktasOfHighClouds1 ,HeightOfHighClouds1 , CLCODEOfHighClouds1 ,TypeOfHighClouds2 , OktasOfHighClouds2 , HeightOfHighClouds2 ,  CLCODEOfHighClouds2 ,TypeOfHighClouds3 ,OktasOfHighClouds3 ,HeightOfHighClouds3 ,CLCODEOfHighClouds3 ,CloudSearchLightReading ,Rainfall, Dry_Bulb ,Wet_Bulb ,Max_Read ,Max_Reset ,Min_Read,Min_Reset,Piche_Read,Piche_Reset,TimeMarksThermo,TimeMarksHygro,  TimeMarksRainRec,Present_Weather,Present_WeatherCode,Past_Weather,Visibility,Wind_Direction,  Wind_Speed,Gusting,AttdThermo,PrAsRead,Correction,CLP,MSLPr,TimeMarksBarograph,TimeMarksAnemograph, OtherTMarks,SoilMoisture,SoilTemperature,sunduration,trend,windrun,speciormetar,UnitOfWindSpeed, IndOrOmissionOfPrecipitation,TypeOfStation_Present_Past_Weather,HeightOfLowestCloud, StandardIsobaricSurface,GPM,DurationOfPeriodOfPrecipitation,GrassMinTemp,CI_OfPrecipitation, BE_OfPrecipitation,IndicatorOfTypeOfIntrumentation,SignOfPressureChange,Supp_Info,VapourPressure,T_H_Graph, DeviceType,creation_date, StationName ,Location,StationRegion,Country,Latitude,Longitude,Altitude,StationType FROM observationslip, stations where stations.station_id=observationslip.Station AND stations.StationName='$station' AND DATE(observationslip.CreationDate)='$date' ");
        return $observations;
    }
    
    public static function observationsForspecificDate($date,$station){
        $observations="";
        if($station==null || $station=="null" || $station=="" || $station=="NULL")       
        $observations= DB::connection('mysql2')->select("SELECT DATE(observationslip.CreationDate) AS Date ,observationslip.TIME,TotalAmountOfAllClouds, TotalAmountOfLowClouds, TypeOfLowClouds1, OktasOfLowClouds1, HeightOfLowClouds1, CLCODEOfLowClouds1, TypeOfLowClouds2, OktasOfLowClouds2, HeightOfLowClouds2, CLCODEOfLowClouds2 , TypeOfLowClouds3 , OktasOfLowClouds3 ,  HeightOfLowClouds3 , CLCODEOfLowClouds3, TypeOfMediumClouds1,  OktasOfMediumClouds1, HeightOfMediumClouds1 ,  CLCODEOfMediumClouds1, TypeOfMediumClouds2 ,OktasOfMediumClouds2 ,HeightOfMediumClouds2 , CLCODEOfMediumClouds2 , TypeOfMediumClouds3 , OktasOfMediumClouds3 , HeightOfMediumClouds3 , CLCODEOfMediumClouds3 , TypeOfHighClouds1 ,OktasOfHighClouds1 ,HeightOfHighClouds1 , CLCODEOfHighClouds1 ,TypeOfHighClouds2 , OktasOfHighClouds2 , HeightOfHighClouds2 ,  CLCODEOfHighClouds2 ,TypeOfHighClouds3 ,OktasOfHighClouds3 ,HeightOfHighClouds3 ,CLCODEOfHighClouds3 ,CloudSearchLightReading ,Rainfall, Dry_Bulb ,Wet_Bulb ,Max_Read ,Max_Reset ,Min_Read,Min_Reset,Piche_Read,Piche_Reset,TimeMarksThermo,TimeMarksHygro,  TimeMarksRainRec,Present_Weather,Present_WeatherCode,Past_Weather,Visibility,Wind_Direction,  Wind_Speed,Gusting,AttdThermo,PrAsRead,Correction,CLP,MSLPr,TimeMarksBarograph,TimeMarksAnemograph, OtherTMarks,SoilMoisture,SoilTemperature,sunduration,trend,windrun,speciormetar,UnitOfWindSpeed, IndOrOmissionOfPrecipitation,TypeOfStation_Present_Past_Weather,HeightOfLowestCloud, StandardIsobaricSurface,GPM,DurationOfPeriodOfPrecipitation,GrassMinTemp,CI_OfPrecipitation, BE_OfPrecipitation,IndicatorOfTypeOfIntrumentation,SignOfPressureChange,Supp_Info,VapourPressure,T_H_Graph, DeviceType,creation_date, StationName ,Location,StationRegion,Country,Latitude,Longitude,Altitude,StationType FROM observationslip, stations where stations.station_id=observationslip.Station  AND DATE(observationslip.CreationDate)='$date' ");
       else
       $observations= DB::connection('mysql2')->select("SELECT DATE(observationslip.CreationDate) AS Date,observationslip.TIME,TotalAmountOfAllClouds, TotalAmountOfLowClouds, TypeOfLowClouds1, OktasOfLowClouds1, HeightOfLowClouds1, CLCODEOfLowClouds1, TypeOfLowClouds2, OktasOfLowClouds2, HeightOfLowClouds2, CLCODEOfLowClouds2 , TypeOfLowClouds3 , OktasOfLowClouds3 ,  HeightOfLowClouds3 , CLCODEOfLowClouds3, TypeOfMediumClouds1,  OktasOfMediumClouds1, HeightOfMediumClouds1 ,  CLCODEOfMediumClouds1, TypeOfMediumClouds2 ,OktasOfMediumClouds2 ,HeightOfMediumClouds2 , CLCODEOfMediumClouds2 , TypeOfMediumClouds3 , OktasOfMediumClouds3 , HeightOfMediumClouds3 , CLCODEOfMediumClouds3 , TypeOfHighClouds1 ,OktasOfHighClouds1 ,HeightOfHighClouds1 , CLCODEOfHighClouds1 ,TypeOfHighClouds2 , OktasOfHighClouds2 , HeightOfHighClouds2 ,  CLCODEOfHighClouds2 ,TypeOfHighClouds3 ,OktasOfHighClouds3 ,HeightOfHighClouds3 ,CLCODEOfHighClouds3 ,CloudSearchLightReading ,Rainfall, Dry_Bulb ,Wet_Bulb ,Max_Read ,Max_Reset ,Min_Read,Min_Reset,Piche_Read,Piche_Reset,TimeMarksThermo,TimeMarksHygro,  TimeMarksRainRec,Present_Weather,Present_WeatherCode,Past_Weather,Visibility,Wind_Direction,  Wind_Speed,Gusting,AttdThermo,PrAsRead,Correction,CLP,MSLPr,TimeMarksBarograph,TimeMarksAnemograph, OtherTMarks,SoilMoisture,SoilTemperature,sunduration,trend,windrun,speciormetar,UnitOfWindSpeed, IndOrOmissionOfPrecipitation,TypeOfStation_Present_Past_Weather,HeightOfLowestCloud, StandardIsobaricSurface,GPM,DurationOfPeriodOfPrecipitation,GrassMinTemp,CI_OfPrecipitation, BE_OfPrecipitation,IndicatorOfTypeOfIntrumentation,SignOfPressureChange,Supp_Info,VapourPressure,T_H_Graph, DeviceType,creation_date, StationName ,Location,StationRegion,Country,Latitude,Longitude,Altitude,StationType FROM observationslip, stations where stations.station_id=observationslip.Station  AND DATE(observationslip.CreationDate)='$date' AND stations.StationName='$station'");
      
        return $observations;
    }

    public static function observationsForspecificDateRange($date1,$date2,$station){
        $observations="";
        if($station==null || $station=="null" || $station=="" || $station=="NULL")
        $observations= DB::connection('mysql2')->select("SELECT DATE(observationslip.CreationDate) AS Date,observationslip.TIME,TotalAmountOfAllClouds, TotalAmountOfLowClouds, TypeOfLowClouds1, OktasOfLowClouds1, HeightOfLowClouds1, CLCODEOfLowClouds1, TypeOfLowClouds2, OktasOfLowClouds2, HeightOfLowClouds2, CLCODEOfLowClouds2 , TypeOfLowClouds3 , OktasOfLowClouds3 ,  HeightOfLowClouds3 , CLCODEOfLowClouds3, TypeOfMediumClouds1,  OktasOfMediumClouds1, HeightOfMediumClouds1 ,  CLCODEOfMediumClouds1, TypeOfMediumClouds2 ,OktasOfMediumClouds2 ,HeightOfMediumClouds2 , CLCODEOfMediumClouds2 , TypeOfMediumClouds3 , OktasOfMediumClouds3 , HeightOfMediumClouds3 , CLCODEOfMediumClouds3 , TypeOfHighClouds1 ,OktasOfHighClouds1 ,HeightOfHighClouds1 , CLCODEOfHighClouds1 ,TypeOfHighClouds2 , OktasOfHighClouds2 , HeightOfHighClouds2 ,  CLCODEOfHighClouds2 ,TypeOfHighClouds3 ,OktasOfHighClouds3 ,HeightOfHighClouds3 ,CLCODEOfHighClouds3 ,CloudSearchLightReading ,Rainfall, Dry_Bulb ,Wet_Bulb ,Max_Read ,Max_Reset ,Min_Read,Min_Reset,Piche_Read,Piche_Reset,TimeMarksThermo,TimeMarksHygro,  TimeMarksRainRec,Present_Weather,Present_WeatherCode,Past_Weather,Visibility,Wind_Direction,  Wind_Speed,Gusting,AttdThermo,PrAsRead,Correction,CLP,MSLPr,TimeMarksBarograph,TimeMarksAnemograph, OtherTMarks,SoilMoisture,SoilTemperature,sunduration,trend,windrun,speciormetar,UnitOfWindSpeed, IndOrOmissionOfPrecipitation,TypeOfStation_Present_Past_Weather,HeightOfLowestCloud, StandardIsobaricSurface,GPM,DurationOfPeriodOfPrecipitation,GrassMinTemp,CI_OfPrecipitation, BE_OfPrecipitation,IndicatorOfTypeOfIntrumentation,SignOfPressureChange,Supp_Info,VapourPressure,T_H_Graph, DeviceType,creation_date, StationName ,Location,StationRegion,Country,Latitude,Longitude,Altitude,StationType FROM observationslip, stations where stations.station_id=observationslip.Station  AND DATE(observationslip.CreationDate)>='$date1' AND DATE(observationslip.CreationDate)<='$date2'");
       else
       $observations= DB::connection('mysql2')->select("SELECT DATE(observationslip.CreationDate) AS Date,observationslip.TIME,TotalAmountOfAllClouds, TotalAmountOfLowClouds, TypeOfLowClouds1, OktasOfLowClouds1, HeightOfLowClouds1, CLCODEOfLowClouds1, TypeOfLowClouds2, OktasOfLowClouds2, HeightOfLowClouds2, CLCODEOfLowClouds2 , TypeOfLowClouds3 , OktasOfLowClouds3 ,  HeightOfLowClouds3 , CLCODEOfLowClouds3, TypeOfMediumClouds1,  OktasOfMediumClouds1, HeightOfMediumClouds1 ,  CLCODEOfMediumClouds1, TypeOfMediumClouds2 ,OktasOfMediumClouds2 ,HeightOfMediumClouds2 , CLCODEOfMediumClouds2 , TypeOfMediumClouds3 , OktasOfMediumClouds3 , HeightOfMediumClouds3 , CLCODEOfMediumClouds3 , TypeOfHighClouds1 ,OktasOfHighClouds1 ,HeightOfHighClouds1 , CLCODEOfHighClouds1 ,TypeOfHighClouds2 , OktasOfHighClouds2 , HeightOfHighClouds2 ,  CLCODEOfHighClouds2 ,TypeOfHighClouds3 ,OktasOfHighClouds3 ,HeightOfHighClouds3 ,CLCODEOfHighClouds3 ,CloudSearchLightReading ,Rainfall, Dry_Bulb ,Wet_Bulb ,Max_Read ,Max_Reset ,Min_Read,Min_Reset,Piche_Read,Piche_Reset,TimeMarksThermo,TimeMarksHygro,  TimeMarksRainRec,Present_Weather,Present_WeatherCode,Past_Weather,Visibility,Wind_Direction,  Wind_Speed,Gusting,AttdThermo,PrAsRead,Correction,CLP,MSLPr,TimeMarksBarograph,TimeMarksAnemograph, OtherTMarks,SoilMoisture,SoilTemperature,sunduration,trend,windrun,speciormetar,UnitOfWindSpeed, IndOrOmissionOfPrecipitation,TypeOfStation_Present_Past_Weather,HeightOfLowestCloud, StandardIsobaricSurface,GPM,DurationOfPeriodOfPrecipitation,GrassMinTemp,CI_OfPrecipitation, BE_OfPrecipitation,IndicatorOfTypeOfIntrumentation,SignOfPressureChange,Supp_Info,VapourPressure,T_H_Graph, DeviceType,creation_date, StationName ,Location,StationRegion,Country,Latitude,Longitude,Altitude,StationType FROM observationslip, stations where stations.station_id=observationslip.Station  AND DATE(observationslip.CreationDate)>='$date1' AND DATE(observationslip.CreationDate)<='$date2' AND stations.StationName='$station'");
        
       return $observations;
    }
    
    public static function observations_specific_aws($date, $time,$station){
        $observations="";
        if($station==null || $station=="null" || $station=="" || $station=="NULL")
        $observations= DB::connection('mysql2')->select("SELECT DATE(observationslip.CreationDate) AS Date,observationslip.TIME,TotalAmountOfAllClouds, TotalAmountOfLowClouds, TypeOfLowClouds1, OktasOfLowClouds1, HeightOfLowClouds1, CLCODEOfLowClouds1, TypeOfLowClouds2, OktasOfLowClouds2, HeightOfLowClouds2, CLCODEOfLowClouds2 , TypeOfLowClouds3 , OktasOfLowClouds3 ,  HeightOfLowClouds3 , CLCODEOfLowClouds3, TypeOfMediumClouds1,  OktasOfMediumClouds1, HeightOfMediumClouds1 ,  CLCODEOfMediumClouds1, TypeOfMediumClouds2 ,OktasOfMediumClouds2 ,HeightOfMediumClouds2 , CLCODEOfMediumClouds2 , TypeOfMediumClouds3 , OktasOfMediumClouds3 , HeightOfMediumClouds3 , CLCODEOfMediumClouds3 , TypeOfHighClouds1 ,OktasOfHighClouds1 ,HeightOfHighClouds1 , CLCODEOfHighClouds1 ,TypeOfHighClouds2 , OktasOfHighClouds2 , HeightOfHighClouds2 ,  CLCODEOfHighClouds2 ,TypeOfHighClouds3 ,OktasOfHighClouds3 ,HeightOfHighClouds3 ,CLCODEOfHighClouds3 ,CloudSearchLightReading ,Rainfall, Dry_Bulb ,Wet_Bulb ,Max_Read ,Max_Reset ,Min_Read,Min_Reset,Piche_Read,Piche_Reset,TimeMarksThermo,TimeMarksHygro,  TimeMarksRainRec,Present_Weather,Present_WeatherCode,Past_Weather,Visibility,Wind_Direction,  Wind_Speed,Gusting,AttdThermo,PrAsRead,Correction,CLP,MSLPr,TimeMarksBarograph,TimeMarksAnemograph, OtherTMarks,SoilMoisture,SoilTemperature,sunduration,trend,windrun,speciormetar,UnitOfWindSpeed, IndOrOmissionOfPrecipitation,TypeOfStation_Present_Past_Weather,HeightOfLowestCloud, StandardIsobaricSurface,GPM,DurationOfPeriodOfPrecipitation,GrassMinTemp,CI_OfPrecipitation, BE_OfPrecipitation,IndicatorOfTypeOfIntrumentation,SignOfPressureChange,Supp_Info,VapourPressure,T_H_Graph, DeviceType,creation_date, StationName ,Location,StationRegion,Country,Latitude,Longitude,Altitude,StationType FROM observationslip, stations where stations.station_id=observationslip.Station  AND DATE(observationslip.CreationDate)='$date' AND observationslip.TIME='$time'   AND observationslip.DeviceType='AWS' ");
      else
        $observations= DB::connection('mysql2')->select("SELECT DATE(observationslip.CreationDate) AS Date,observationslip.TIME,TotalAmountOfAllClouds, TotalAmountOfLowClouds, TypeOfLowClouds1, OktasOfLowClouds1, HeightOfLowClouds1, CLCODEOfLowClouds1, TypeOfLowClouds2, OktasOfLowClouds2, HeightOfLowClouds2, CLCODEOfLowClouds2 , TypeOfLowClouds3 , OktasOfLowClouds3 ,  HeightOfLowClouds3 , CLCODEOfLowClouds3, TypeOfMediumClouds1,  OktasOfMediumClouds1, HeightOfMediumClouds1 ,  CLCODEOfMediumClouds1, TypeOfMediumClouds2 ,OktasOfMediumClouds2 ,HeightOfMediumClouds2 , CLCODEOfMediumClouds2 , TypeOfMediumClouds3 , OktasOfMediumClouds3 , HeightOfMediumClouds3 , CLCODEOfMediumClouds3 , TypeOfHighClouds1 ,OktasOfHighClouds1 ,HeightOfHighClouds1 , CLCODEOfHighClouds1 ,TypeOfHighClouds2 , OktasOfHighClouds2 , HeightOfHighClouds2 ,  CLCODEOfHighClouds2 ,TypeOfHighClouds3 ,OktasOfHighClouds3 ,HeightOfHighClouds3 ,CLCODEOfHighClouds3 ,CloudSearchLightReading ,Rainfall, Dry_Bulb ,Wet_Bulb ,Max_Read ,Max_Reset ,Min_Read,Min_Reset,Piche_Read,Piche_Reset,TimeMarksThermo,TimeMarksHygro,  TimeMarksRainRec,Present_Weather,Present_WeatherCode,Past_Weather,Visibility,Wind_Direction,  Wind_Speed,Gusting,AttdThermo,PrAsRead,Correction,CLP,MSLPr,TimeMarksBarograph,TimeMarksAnemograph, OtherTMarks,SoilMoisture,SoilTemperature,sunduration,trend,windrun,speciormetar,UnitOfWindSpeed, IndOrOmissionOfPrecipitation,TypeOfStation_Present_Past_Weather,HeightOfLowestCloud, StandardIsobaricSurface,GPM,DurationOfPeriodOfPrecipitation,GrassMinTemp,CI_OfPrecipitation, BE_OfPrecipitation,IndicatorOfTypeOfIntrumentation,SignOfPressureChange,Supp_Info,VapourPressure,T_H_Graph, DeviceType,creation_date, StationName ,Location,StationRegion,Country,Latitude,Longitude,Altitude,StationType FROM observationslip, stations where stations.station_id=observationslip.Station  AND DATE(observationslip.CreationDate)='$date' AND observationslip.TIME='$time'  AND stations.StationName='$station' AND observationslip.DeviceType='AWS' ");
      
        return $observations;
    }
    public static function observations_specific_manual($date, $time,$station){
        $observations="";
        if($station==null || $station=="null" || $station=="" || $station=="NULL")
        $observations= DB::connection('mysql2')->select("SELECT DATE(observationslip.CreationDate) AS Date,observationslip.TIME,TotalAmountOfAllClouds, TotalAmountOfLowClouds, TypeOfLowClouds1, OktasOfLowClouds1, HeightOfLowClouds1, CLCODEOfLowClouds1, TypeOfLowClouds2, OktasOfLowClouds2, HeightOfLowClouds2, CLCODEOfLowClouds2 , TypeOfLowClouds3 , OktasOfLowClouds3 ,  HeightOfLowClouds3 , CLCODEOfLowClouds3, TypeOfMediumClouds1,  OktasOfMediumClouds1, HeightOfMediumClouds1 ,  CLCODEOfMediumClouds1, TypeOfMediumClouds2 ,OktasOfMediumClouds2 ,HeightOfMediumClouds2 , CLCODEOfMediumClouds2 , TypeOfMediumClouds3 , OktasOfMediumClouds3 , HeightOfMediumClouds3 , CLCODEOfMediumClouds3 , TypeOfHighClouds1 ,OktasOfHighClouds1 ,HeightOfHighClouds1 , CLCODEOfHighClouds1 ,TypeOfHighClouds2 , OktasOfHighClouds2 , HeightOfHighClouds2 ,  CLCODEOfHighClouds2 ,TypeOfHighClouds3 ,OktasOfHighClouds3 ,HeightOfHighClouds3 ,CLCODEOfHighClouds3 ,CloudSearchLightReading ,Rainfall, Dry_Bulb ,Wet_Bulb ,Max_Read ,Max_Reset ,Min_Read,Min_Reset,Piche_Read,Piche_Reset,TimeMarksThermo,TimeMarksHygro,  TimeMarksRainRec,Present_Weather,Present_WeatherCode,Past_Weather,Visibility,Wind_Direction,  Wind_Speed,Gusting,AttdThermo,PrAsRead,Correction,CLP,MSLPr,TimeMarksBarograph,TimeMarksAnemograph, OtherTMarks,SoilMoisture,SoilTemperature,sunduration,trend,windrun,speciormetar,UnitOfWindSpeed, IndOrOmissionOfPrecipitation,TypeOfStation_Present_Past_Weather,HeightOfLowestCloud, StandardIsobaricSurface,GPM,DurationOfPeriodOfPrecipitation,GrassMinTemp,CI_OfPrecipitation, BE_OfPrecipitation,IndicatorOfTypeOfIntrumentation,SignOfPressureChange,Supp_Info,VapourPressure,T_H_Graph, DeviceType,creation_date, StationName ,Location,StationRegion,Country,Latitude,Longitude,Altitude,StationType FROM observationslip, stations where stations.station_id=observationslip.Station  AND observationslip.Date='$date' AND observationslip.TIME='$time'  AND observationslip.DeviceType='web' ");
        else
        $observations= DB::connection('mysql2')->select("SELECT DATE(observationslip.CreationDate) AS Date,observationslip.TIME,TotalAmountOfAllClouds, TotalAmountOfLowClouds, TypeOfLowClouds1, OktasOfLowClouds1, HeightOfLowClouds1, CLCODEOfLowClouds1, TypeOfLowClouds2, OktasOfLowClouds2, HeightOfLowClouds2, CLCODEOfLowClouds2 , TypeOfLowClouds3 , OktasOfLowClouds3 ,  HeightOfLowClouds3 , CLCODEOfLowClouds3, TypeOfMediumClouds1,  OktasOfMediumClouds1, HeightOfMediumClouds1 ,  CLCODEOfMediumClouds1, TypeOfMediumClouds2 ,OktasOfMediumClouds2 ,HeightOfMediumClouds2 , CLCODEOfMediumClouds2 , TypeOfMediumClouds3 , OktasOfMediumClouds3 , HeightOfMediumClouds3 , CLCODEOfMediumClouds3 , TypeOfHighClouds1 ,OktasOfHighClouds1 ,HeightOfHighClouds1 , CLCODEOfHighClouds1 ,TypeOfHighClouds2 , OktasOfHighClouds2 , HeightOfHighClouds2 ,  CLCODEOfHighClouds2 ,TypeOfHighClouds3 ,OktasOfHighClouds3 ,HeightOfHighClouds3 ,CLCODEOfHighClouds3 ,CloudSearchLightReading ,Rainfall, Dry_Bulb ,Wet_Bulb ,Max_Read ,Max_Reset ,Min_Read,Min_Reset,Piche_Read,Piche_Reset,TimeMarksThermo,TimeMarksHygro,  TimeMarksRainRec,Present_Weather,Present_WeatherCode,Past_Weather,Visibility,Wind_Direction,  Wind_Speed,Gusting,AttdThermo,PrAsRead,Correction,CLP,MSLPr,TimeMarksBarograph,TimeMarksAnemograph, OtherTMarks,SoilMoisture,SoilTemperature,sunduration,trend,windrun,speciormetar,UnitOfWindSpeed, IndOrOmissionOfPrecipitation,TypeOfStation_Present_Past_Weather,HeightOfLowestCloud, StandardIsobaricSurface,GPM,DurationOfPeriodOfPrecipitation,GrassMinTemp,CI_OfPrecipitation, BE_OfPrecipitation,IndicatorOfTypeOfIntrumentation,SignOfPressureChange,Supp_Info,VapourPressure,T_H_Graph, DeviceType,creation_date, StationName ,Location,StationRegion,Country,Latitude,Longitude,Altitude,StationType FROM observationslip, stations where stations.station_id=observationslip.Station  AND observationslip.Date='$date' AND observationslip.TIME='$time'  AND stations.StationName='$station' AND observationslip.DeviceType='web' ");
       
        return $observations;
    }
    
    public static function observations_current_aws($station){
        $observations="";
        if($station==null || $station=="null" || $station=="" || $station=="NULL")
        $observations= DB::connection('mysql2')->select("SELECT DATE(observationslip.CreationDate) AS Date,observationslip.TIME,TotalAmountOfAllClouds, TotalAmountOfLowClouds, TypeOfLowClouds1, OktasOfLowClouds1, HeightOfLowClouds1, CLCODEOfLowClouds1, TypeOfLowClouds2, OktasOfLowClouds2, HeightOfLowClouds2, CLCODEOfLowClouds2 , TypeOfLowClouds3 , OktasOfLowClouds3 ,  HeightOfLowClouds3 , CLCODEOfLowClouds3, TypeOfMediumClouds1,  OktasOfMediumClouds1, HeightOfMediumClouds1 ,  CLCODEOfMediumClouds1, TypeOfMediumClouds2 ,OktasOfMediumClouds2 ,HeightOfMediumClouds2 , CLCODEOfMediumClouds2 , TypeOfMediumClouds3 , OktasOfMediumClouds3 , HeightOfMediumClouds3 , CLCODEOfMediumClouds3 , TypeOfHighClouds1 ,OktasOfHighClouds1 ,HeightOfHighClouds1 , CLCODEOfHighClouds1 ,TypeOfHighClouds2 , OktasOfHighClouds2 , HeightOfHighClouds2 ,  CLCODEOfHighClouds2 ,TypeOfHighClouds3 ,OktasOfHighClouds3 ,HeightOfHighClouds3 ,CLCODEOfHighClouds3 ,CloudSearchLightReading ,Rainfall, Dry_Bulb ,Wet_Bulb ,Max_Read ,Max_Reset ,Min_Read,Min_Reset,Piche_Read,Piche_Reset,TimeMarksThermo,TimeMarksHygro,  TimeMarksRainRec,Present_Weather,Present_WeatherCode,Past_Weather,Visibility,Wind_Direction,  Wind_Speed,Gusting,AttdThermo,PrAsRead,Correction,CLP,MSLPr,TimeMarksBarograph,TimeMarksAnemograph, OtherTMarks,SoilMoisture,SoilTemperature,sunduration,trend,windrun,speciormetar,UnitOfWindSpeed, IndOrOmissionOfPrecipitation,TypeOfStation_Present_Past_Weather,HeightOfLowestCloud, StandardIsobaricSurface,GPM,DurationOfPeriodOfPrecipitation,GrassMinTemp,CI_OfPrecipitation, BE_OfPrecipitation,IndicatorOfTypeOfIntrumentation,SignOfPressureChange,Supp_Info,VapourPressure,T_H_Graph, DeviceType,creation_date, StationName ,Location,StationRegion,Country,Latitude,Longitude,Altitude,StationType FROM observationslip, stations where stations.station_id=observationslip.Station AND observationslip.DeviceType='AWS'  AND DATE(observationslip.CreationDate)=DATE_FORMAT(now(), '%Y-%m-%d') ");
        else
        $observations= DB::connection('mysql2')->select("SELECT DATE(observationslip.CreationDate) AS Date,observationslip.TIME,TotalAmountOfAllClouds, TotalAmountOfLowClouds, TypeOfLowClouds1, OktasOfLowClouds1, HeightOfLowClouds1, CLCODEOfLowClouds1, TypeOfLowClouds2, OktasOfLowClouds2, HeightOfLowClouds2, CLCODEOfLowClouds2 , TypeOfLowClouds3 , OktasOfLowClouds3 ,  HeightOfLowClouds3 , CLCODEOfLowClouds3, TypeOfMediumClouds1,  OktasOfMediumClouds1, HeightOfMediumClouds1 ,  CLCODEOfMediumClouds1, TypeOfMediumClouds2 ,OktasOfMediumClouds2 ,HeightOfMediumClouds2 , CLCODEOfMediumClouds2 , TypeOfMediumClouds3 , OktasOfMediumClouds3 , HeightOfMediumClouds3 , CLCODEOfMediumClouds3 , TypeOfHighClouds1 ,OktasOfHighClouds1 ,HeightOfHighClouds1 , CLCODEOfHighClouds1 ,TypeOfHighClouds2 , OktasOfHighClouds2 , HeightOfHighClouds2 ,  CLCODEOfHighClouds2 ,TypeOfHighClouds3 ,OktasOfHighClouds3 ,HeightOfHighClouds3 ,CLCODEOfHighClouds3 ,CloudSearchLightReading ,Rainfall, Dry_Bulb ,Wet_Bulb ,Max_Read ,Max_Reset ,Min_Read,Min_Reset,Piche_Read,Piche_Reset,TimeMarksThermo,TimeMarksHygro,  TimeMarksRainRec,Present_Weather,Present_WeatherCode,Past_Weather,Visibility,Wind_Direction,  Wind_Speed,Gusting,AttdThermo,PrAsRead,Correction,CLP,MSLPr,TimeMarksBarograph,TimeMarksAnemograph, OtherTMarks,SoilMoisture,SoilTemperature,sunduration,trend,windrun,speciormetar,UnitOfWindSpeed, IndOrOmissionOfPrecipitation,TypeOfStation_Present_Past_Weather,HeightOfLowestCloud, StandardIsobaricSurface,GPM,DurationOfPeriodOfPrecipitation,GrassMinTemp,CI_OfPrecipitation, BE_OfPrecipitation,IndicatorOfTypeOfIntrumentation,SignOfPressureChange,Supp_Info,VapourPressure,T_H_Graph, DeviceType,creation_date, StationName ,Location,StationRegion,Country,Latitude,Longitude,Altitude,StationType FROM observationslip, stations where stations.station_id=observationslip.Station AND observationslip.DeviceType='AWS' AND  stations.StationName='$station' AND DATE(observationslip.CreationDate)=DATE_FORMAT(now(), '%Y-%m-%d') ");
        return $observations;
    }
    public static function observations_current_manual($station){
        $observations="";
        if($station==null || $station=="null" || $station=="" || $station=="NULL")
        $observations= DB::connection('mysql2')->select("SELECT DATE(observationslip.CreationDate) AS Date,observationslip.TIME,TotalAmountOfAllClouds, TotalAmountOfLowClouds, TypeOfLowClouds1, OktasOfLowClouds1, HeightOfLowClouds1, CLCODEOfLowClouds1, TypeOfLowClouds2, OktasOfLowClouds2, HeightOfLowClouds2, CLCODEOfLowClouds2 , TypeOfLowClouds3 , OktasOfLowClouds3 ,  HeightOfLowClouds3 , CLCODEOfLowClouds3, TypeOfMediumClouds1,  OktasOfMediumClouds1, HeightOfMediumClouds1 ,  CLCODEOfMediumClouds1, TypeOfMediumClouds2 ,OktasOfMediumClouds2 ,HeightOfMediumClouds2 , CLCODEOfMediumClouds2 , TypeOfMediumClouds3 , OktasOfMediumClouds3 , HeightOfMediumClouds3 , CLCODEOfMediumClouds3 , TypeOfHighClouds1 ,OktasOfHighClouds1 ,HeightOfHighClouds1 , CLCODEOfHighClouds1 ,TypeOfHighClouds2 , OktasOfHighClouds2 , HeightOfHighClouds2 ,  CLCODEOfHighClouds2 ,TypeOfHighClouds3 ,OktasOfHighClouds3 ,HeightOfHighClouds3 ,CLCODEOfHighClouds3 ,CloudSearchLightReading ,Rainfall, Dry_Bulb ,Wet_Bulb ,Max_Read ,Max_Reset ,Min_Read,Min_Reset,Piche_Read,Piche_Reset,TimeMarksThermo,TimeMarksHygro,  TimeMarksRainRec,Present_Weather,Present_WeatherCode,Past_Weather,Visibility,Wind_Direction,  Wind_Speed,Gusting,AttdThermo,PrAsRead,Correction,CLP,MSLPr,TimeMarksBarograph,TimeMarksAnemograph, OtherTMarks,SoilMoisture,SoilTemperature,sunduration,trend,windrun,speciormetar,UnitOfWindSpeed, IndOrOmissionOfPrecipitation,TypeOfStation_Present_Past_Weather,HeightOfLowestCloud, StandardIsobaricSurface,GPM,DurationOfPeriodOfPrecipitation,GrassMinTemp,CI_OfPrecipitation, BE_OfPrecipitation,IndicatorOfTypeOfIntrumentation,SignOfPressureChange,Supp_Info,VapourPressure,T_H_Graph, DeviceType,creation_date, StationName ,Location,StationRegion,Country,Latitude,Longitude,Altitude,StationType FROM observationslip, stations where stations.station_id=observationslip.Station AND NOT observationslip.DeviceType='AWS'  AND DATE(observationslip.CreationDate)=DATE_FORMAT(now(), '%Y-%m-%d') ");
        else 
        $observations= DB::connection('mysql2')->select("SELECT DATE(observationslip.CreationDate) AS Date,observationslip.TIME,TotalAmountOfAllClouds, TotalAmountOfLowClouds, TypeOfLowClouds1, OktasOfLowClouds1, HeightOfLowClouds1, CLCODEOfLowClouds1, TypeOfLowClouds2, OktasOfLowClouds2, HeightOfLowClouds2, CLCODEOfLowClouds2 , TypeOfLowClouds3 , OktasOfLowClouds3 ,  HeightOfLowClouds3 , CLCODEOfLowClouds3, TypeOfMediumClouds1,  OktasOfMediumClouds1, HeightOfMediumClouds1 ,  CLCODEOfMediumClouds1, TypeOfMediumClouds2 ,OktasOfMediumClouds2 ,HeightOfMediumClouds2 , CLCODEOfMediumClouds2 , TypeOfMediumClouds3 , OktasOfMediumClouds3 , HeightOfMediumClouds3 , CLCODEOfMediumClouds3 , TypeOfHighClouds1 ,OktasOfHighClouds1 ,HeightOfHighClouds1 , CLCODEOfHighClouds1 ,TypeOfHighClouds2 , OktasOfHighClouds2 , HeightOfHighClouds2 ,  CLCODEOfHighClouds2 ,TypeOfHighClouds3 ,OktasOfHighClouds3 ,HeightOfHighClouds3 ,CLCODEOfHighClouds3 ,CloudSearchLightReading ,Rainfall, Dry_Bulb ,Wet_Bulb ,Max_Read ,Max_Reset ,Min_Read,Min_Reset,Piche_Read,Piche_Reset,TimeMarksThermo,TimeMarksHygro,  TimeMarksRainRec,Present_Weather,Present_WeatherCode,Past_Weather,Visibility,Wind_Direction,  Wind_Speed,Gusting,AttdThermo,PrAsRead,Correction,CLP,MSLPr,TimeMarksBarograph,TimeMarksAnemograph, OtherTMarks,SoilMoisture,SoilTemperature,sunduration,trend,windrun,speciormetar,UnitOfWindSpeed, IndOrOmissionOfPrecipitation,TypeOfStation_Present_Past_Weather,HeightOfLowestCloud, StandardIsobaricSurface,GPM,DurationOfPeriodOfPrecipitation,GrassMinTemp,CI_OfPrecipitation, BE_OfPrecipitation,IndicatorOfTypeOfIntrumentation,SignOfPressureChange,Supp_Info,VapourPressure,T_H_Graph, DeviceType,creation_date, StationName ,Location,StationRegion,Country,Latitude,Longitude,Altitude,StationType FROM observationslip, stations where stations.station_id=observationslip.Station AND NOT observationslip.DeviceType='AWS' AND  stations.StationName='$station' AND DATE(observationslip.CreationDate)=DATE_FORMAT(now(), '%Y-%m-%d') ");
       

        return $observations;
    }

    public static function allstations(){
        $sql="SELECT StationName,Latitude,Longitude,Location,Altitude,StationRegion,Country FROM stations WHERE StationStatus='on' AND ( Country='Uganda' || Country='uganda' );";
        $observations= DB::connection('mysql2')->select($sql);

        return $observations;
    }
    
    public static function observations_30days($station){
        $observations="";
        if($station==null || $station=="null" || $station=="" || $station=="NULL")
        $observations= DB::connection('mysql2')->select("SELECT DATE(observationslip.CreationDate) AS Date,observationslip.TIME,TotalAmountOfAllClouds, TotalAmountOfLowClouds, TypeOfLowClouds1, OktasOfLowClouds1, HeightOfLowClouds1, CLCODEOfLowClouds1, TypeOfLowClouds2, OktasOfLowClouds2, HeightOfLowClouds2, CLCODEOfLowClouds2 , TypeOfLowClouds3 , OktasOfLowClouds3 ,  HeightOfLowClouds3 , CLCODEOfLowClouds3, TypeOfMediumClouds1,  OktasOfMediumClouds1, HeightOfMediumClouds1 ,  CLCODEOfMediumClouds1, TypeOfMediumClouds2 ,OktasOfMediumClouds2 ,HeightOfMediumClouds2 , CLCODEOfMediumClouds2 , TypeOfMediumClouds3 , OktasOfMediumClouds3 , HeightOfMediumClouds3 , CLCODEOfMediumClouds3 , TypeOfHighClouds1 ,OktasOfHighClouds1 ,HeightOfHighClouds1 , CLCODEOfHighClouds1 ,TypeOfHighClouds2 , OktasOfHighClouds2 , HeightOfHighClouds2 ,  CLCODEOfHighClouds2 ,TypeOfHighClouds3 ,OktasOfHighClouds3 ,HeightOfHighClouds3 ,CLCODEOfHighClouds3 ,CloudSearchLightReading ,Rainfall, Dry_Bulb ,Wet_Bulb ,Max_Read ,Max_Reset ,Min_Read,Min_Reset,Piche_Read,Piche_Reset,TimeMarksThermo,TimeMarksHygro,  TimeMarksRainRec,Present_Weather,Present_WeatherCode,Past_Weather,Visibility,Wind_Direction,  Wind_Speed,Gusting,AttdThermo,PrAsRead,Correction,CLP,MSLPr,TimeMarksBarograph,TimeMarksAnemograph, OtherTMarks,SoilMoisture,SoilTemperature,sunduration,trend,windrun,speciormetar,UnitOfWindSpeed, IndOrOmissionOfPrecipitation,TypeOfStation_Present_Past_Weather,HeightOfLowestCloud, StandardIsobaricSurface,GPM,DurationOfPeriodOfPrecipitation,GrassMinTemp,CI_OfPrecipitation, BE_OfPrecipitation,IndicatorOfTypeOfIntrumentation,SignOfPressureChange,Supp_Info,VapourPressure,T_H_Graph, DeviceType,creation_date, StationName ,Location,StationRegion,Country,Latitude,Longitude,Altitude,StationType FROM observationslip, stations where stations.station_id=observationslip.Station  AND ( DATE(observationslip.CreationDate)<=DATE_FORMAT(now(), '%Y-%m-%d') AND DATE(observationslip.CreationDate)>DATE_FORMAT(DATE_SUB(now(), INTERVAL 30 DAY), '%Y-%m-%d') )");
        else 
        $observations= DB::connection('mysql2')->select("SELECT DATE(observationslip.CreationDate) AS Date,observationslip.TIME,TotalAmountOfAllClouds, TotalAmountOfLowClouds, TypeOfLowClouds1, OktasOfLowClouds1, HeightOfLowClouds1, CLCODEOfLowClouds1, TypeOfLowClouds2, OktasOfLowClouds2, HeightOfLowClouds2, CLCODEOfLowClouds2 , TypeOfLowClouds3 , OktasOfLowClouds3 ,  HeightOfLowClouds3 , CLCODEOfLowClouds3, TypeOfMediumClouds1,  OktasOfMediumClouds1, HeightOfMediumClouds1 ,  CLCODEOfMediumClouds1, TypeOfMediumClouds2 ,OktasOfMediumClouds2 ,HeightOfMediumClouds2 , CLCODEOfMediumClouds2 , TypeOfMediumClouds3 , OktasOfMediumClouds3 , HeightOfMediumClouds3 , CLCODEOfMediumClouds3 , TypeOfHighClouds1 ,OktasOfHighClouds1 ,HeightOfHighClouds1 , CLCODEOfHighClouds1 ,TypeOfHighClouds2 , OktasOfHighClouds2 , HeightOfHighClouds2 ,  CLCODEOfHighClouds2 ,TypeOfHighClouds3 ,OktasOfHighClouds3 ,HeightOfHighClouds3 ,CLCODEOfHighClouds3 ,CloudSearchLightReading ,Rainfall, Dry_Bulb ,Wet_Bulb ,Max_Read ,Max_Reset ,Min_Read,Min_Reset,Piche_Read,Piche_Reset,TimeMarksThermo,TimeMarksHygro,  TimeMarksRainRec,Present_Weather,Present_WeatherCode,Past_Weather,Visibility,Wind_Direction,  Wind_Speed,Gusting,AttdThermo,PrAsRead,Correction,CLP,MSLPr,TimeMarksBarograph,TimeMarksAnemograph, OtherTMarks,SoilMoisture,SoilTemperature,sunduration,trend,windrun,speciormetar,UnitOfWindSpeed, IndOrOmissionOfPrecipitation,TypeOfStation_Present_Past_Weather,HeightOfLowestCloud, StandardIsobaricSurface,GPM,DurationOfPeriodOfPrecipitation,GrassMinTemp,CI_OfPrecipitation, BE_OfPrecipitation,IndicatorOfTypeOfIntrumentation,SignOfPressureChange,Supp_Info,VapourPressure,T_H_Graph, DeviceType,creation_date, StationName ,Location,StationRegion,Country,Latitude,Longitude,Altitude,StationType FROM observationslip, stations where stations.station_id=observationslip.Station AND  stations.StationName='$station' AND ( DATE(observationslip.CreationDate)<=DATE_FORMAT(now(), '%Y-%m-%d') AND DATE(observationslip.CreationDate)>DATE_FORMAT(DATE_SUB(now(), INTERVAL 30 DAY), '%Y-%m-%d') ) ");
       

        return $observations;
     }

    public static function observations_7days($station){
        $observations="";
        if($station==null || $station=="null" || $station=="" || $station=="NULL")
        $observations= DB::connection('mysql2')->select("SELECT DATE(observationslip.CreationDate) AS Date,observationslip.TIME,TotalAmountOfAllClouds, TotalAmountOfLowClouds, TypeOfLowClouds1, OktasOfLowClouds1, HeightOfLowClouds1, CLCODEOfLowClouds1, TypeOfLowClouds2, OktasOfLowClouds2, HeightOfLowClouds2, CLCODEOfLowClouds2 , TypeOfLowClouds3 , OktasOfLowClouds3 ,  HeightOfLowClouds3 , CLCODEOfLowClouds3, TypeOfMediumClouds1,  OktasOfMediumClouds1, HeightOfMediumClouds1 ,  CLCODEOfMediumClouds1, TypeOfMediumClouds2 ,OktasOfMediumClouds2 ,HeightOfMediumClouds2 , CLCODEOfMediumClouds2 , TypeOfMediumClouds3 , OktasOfMediumClouds3 , HeightOfMediumClouds3 , CLCODEOfMediumClouds3 , TypeOfHighClouds1 ,OktasOfHighClouds1 ,HeightOfHighClouds1 , CLCODEOfHighClouds1 ,TypeOfHighClouds2 , OktasOfHighClouds2 , HeightOfHighClouds2 ,  CLCODEOfHighClouds2 ,TypeOfHighClouds3 ,OktasOfHighClouds3 ,HeightOfHighClouds3 ,CLCODEOfHighClouds3 ,CloudSearchLightReading ,Rainfall, Dry_Bulb ,Wet_Bulb ,Max_Read ,Max_Reset ,Min_Read,Min_Reset,Piche_Read,Piche_Reset,TimeMarksThermo,TimeMarksHygro,  TimeMarksRainRec,Present_Weather,Present_WeatherCode,Past_Weather,Visibility,Wind_Direction,  Wind_Speed,Gusting,AttdThermo,PrAsRead,Correction,CLP,MSLPr,TimeMarksBarograph,TimeMarksAnemograph, OtherTMarks,SoilMoisture,SoilTemperature,sunduration,trend,windrun,speciormetar,UnitOfWindSpeed, IndOrOmissionOfPrecipitation,TypeOfStation_Present_Past_Weather,HeightOfLowestCloud, StandardIsobaricSurface,GPM,DurationOfPeriodOfPrecipitation,GrassMinTemp,CI_OfPrecipitation, BE_OfPrecipitation,IndicatorOfTypeOfIntrumentation,SignOfPressureChange,Supp_Info,VapourPressure,T_H_Graph, DeviceType,creation_date, StationName,Location,StationRegion,Country,Latitude,Longitude,Altitude,StationType FROM observationslip, stations where stations.station_id=observationslip.Station  AND ( DATE(observationslip.CreationDate)<=DATE_FORMAT(now(), '%Y-%m-%d') AND DATE(observationslip.CreationDate)>DATE_FORMAT(DATE_SUB(now(), INTERVAL 7 DAY), '%Y-%m-%d') )");
        else 
        $observations= DB::connection('mysql2')->select("SELECT DATE(observationslip.CreationDate) AS Date,observationslip.TIME,TotalAmountOfAllClouds, TotalAmountOfLowClouds, TypeOfLowClouds1, OktasOfLowClouds1, HeightOfLowClouds1, CLCODEOfLowClouds1, TypeOfLowClouds2, OktasOfLowClouds2, HeightOfLowClouds2, CLCODEOfLowClouds2 , TypeOfLowClouds3 , OktasOfLowClouds3 ,  HeightOfLowClouds3 , CLCODEOfLowClouds3, TypeOfMediumClouds1,  OktasOfMediumClouds1, HeightOfMediumClouds1 ,  CLCODEOfMediumClouds1, TypeOfMediumClouds2 ,OktasOfMediumClouds2 ,HeightOfMediumClouds2 , CLCODEOfMediumClouds2 , TypeOfMediumClouds3 , OktasOfMediumClouds3 , HeightOfMediumClouds3 , CLCODEOfMediumClouds3 , TypeOfHighClouds1 ,OktasOfHighClouds1 ,HeightOfHighClouds1 , CLCODEOfHighClouds1 ,TypeOfHighClouds2 , OktasOfHighClouds2 , HeightOfHighClouds2 ,  CLCODEOfHighClouds2 ,TypeOfHighClouds3 ,OktasOfHighClouds3 ,HeightOfHighClouds3 ,CLCODEOfHighClouds3 ,CloudSearchLightReading ,Rainfall, Dry_Bulb ,Wet_Bulb ,Max_Read ,Max_Reset ,Min_Read,Min_Reset,Piche_Read,Piche_Reset,TimeMarksThermo,TimeMarksHygro,  TimeMarksRainRec,Present_Weather,Present_WeatherCode,Past_Weather,Visibility,Wind_Direction,  Wind_Speed,Gusting,AttdThermo,PrAsRead,Correction,CLP,MSLPr,TimeMarksBarograph,TimeMarksAnemograph, OtherTMarks,SoilMoisture,SoilTemperature,sunduration,trend,windrun,speciormetar,UnitOfWindSpeed, IndOrOmissionOfPrecipitation,TypeOfStation_Present_Past_Weather,HeightOfLowestCloud, StandardIsobaricSurface,GPM,DurationOfPeriodOfPrecipitation,GrassMinTemp,CI_OfPrecipitation, BE_OfPrecipitation,IndicatorOfTypeOfIntrumentation,SignOfPressureChange,Supp_Info,VapourPressure,T_H_Graph, DeviceType,creation_date, StationName ,Location,StationRegion,Country,Latitude,Longitude,Altitude,StationType FROM observationslip, stations where stations.station_id=observationslip.Station AND  stations.StationName='$station' AND ( DATE(observationslip.CreationDate)<=DATE_FORMAT(now(), '%Y-%m-%d') AND DATE(observationslip.CreationDate)>DATE_FORMAT(DATE_SUB(now(), INTERVAL 7 DAY), '%Y-%m-%d') ) ");
       

        return $observations;
    }

}
